from flask import Flask, render_template
from flask_sqlalchemy import SQLAlchemy
from flask_socketio import SocketIO
from flask_mail import Mail
from flask_migrate import Migrate
from flask_cors import CORS
import os
from dotenv import load_dotenv
from config import Config
import requests  # üëà –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è socket.io.min.js

# --- –ó–∞–≥—Ä—É–∑–∏—Ç—å .env –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
load_dotenv()

db = SQLAlchemy()
socketio = SocketIO()
mail = Mail()
migrate = Migrate()


def ensure_static_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã."""
    static_js = os.path.join('app', 'static', 'js')
    os.makedirs(static_js, exist_ok=True)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ socket.io.min.js
    socketio_js = os.path.join(static_js, 'socket.io.min.js')
    if not os.path.exists(socketio_js):
        print("‚öôÔ∏è  Downloading socket.io.min.js...")
        url = "https://cdn.socket.io/4.7.5/socket.io.min.js"
        try:
            r = requests.get(url)
            r.raise_for_status()
            with open(socketio_js, "wb") as f:
                f.write(r.content)
            print("‚úÖ socket.io.min.js saved to /static/js/")
        except Exception as e:
            print(f"‚ùå Failed to download socket.io.min.js: {e}")

    # –°–æ–∑–¥–∞–µ–º favicon, –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    static_dir = os.path.join('app', 'static')
    favicon_path = os.path.join(static_dir, 'favicon.ico')
    if not os.path.exists(favicon_path):
        print("‚öôÔ∏è  Creating placeholder favicon.ico...")
        try:
            with open(favicon_path, "wb") as f:
                # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—É—Å—Ç–æ–π favicon (–≤–∞–ª–∏–¥–Ω—ã–π 16√ó16 ICO)
                f.write(b'\x00\x00\x01\x00\x01\x00\x10\x10\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00')
            print("‚úÖ favicon.ico created")
        except Exception as e:
            print(f"‚ùå Failed to create favicon: {e}")


def create_app(config_class=Config):
    app = Flask(__name__,
                template_folder='templates',
                static_folder='static')

    # –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    app.config.from_object(config_class)

    # –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –Ω—É–∂–Ω—ã–µ –ø–∞–ø–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    os.makedirs(app.config['UPLOAD_FOLDER'], exist_ok=True)
    os.makedirs(app.config['SIGNAL_PROTOCOL_STORE'], exist_ok=True)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
    db.init_app(app)
    socketio.init_app(
        app,
        cors_allowed_origins="*",
        async_mode='threading',
        logger=True,
        engineio_logger=True
    )
    mail.init_app(app)
    migrate.init_app(app, db)
    CORS(app)

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è blueprints
    from app.routes.auth import auth_bp
    from app.routes.chats import chats_bp
    from app.routes.uploads import uploads_bp

    app.register_blueprint(auth_bp, url_prefix='/auth')
    app.register_blueprint(chats_bp, url_prefix='/chats')
    app.register_blueprint(uploads_bp, url_prefix='/uploads')

    # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    @app.route('/')
    def index():
        return render_template('index.html')

    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è favicon, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ 404
    @app.route('/favicon.ico')
    def favicon():
        return '', 204

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    ensure_static_files()

    # –ò–º–ø–æ—Ä—Ç –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è socket.io —Å–æ–±—ã—Ç–∏–π
    from app.sockets import connection, events
    socketio.on_namespace(connection.ChatNamespace('/chat'))

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ—á—Ç—ã
    print(f"üìß MAIL_USERNAME: {app.config.get('MAIL_USERNAME')}")

    return app
